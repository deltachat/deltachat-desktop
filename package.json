{
  "name": "deltachat-desktop",
  "version": "1.34.5",
  "description": "Desktop Application for delta.chat",
  "main": "index.js",
  "scripts": {
    "preinstall": "node ./bin/check-nodejs-version.js",
    "test": "npm run check-types && npm run lint && npm run check-formatting && npm run test-log-conventions && npm run test-unit && npm run test-misc",
    "test-misc": "node ./bin/test_package_lock_version",
    "test-log-conventions": "node ./bin/log-conventions",
    "test-unit": "env TS_NODE_COMPILER_OPTIONS='{\"module\": \"commonjs\" }' mocha -r ts-node/register 'test/mocha/**/*.ts'",
    "test-e2e-ci": "env NODE_ENV=test testcafe --skip-js-errors \"electron:./\" \"./test/testcafe/test.js\" && npm run test-e2e-msglist",
    "test-e2e": "env NODE_ENV=test testcafe --skip-js-errors \"electron:./\" \"./test/testcafe/test.js\" && npm run test-e2e-msglist",
    "test-e2e-msglist": " TEST_DIR=\".test_tmp_data\" NODE_ENV=test npx testcafe --skip-js-errors \"electron:./\" \"./test/testcafe/messagelist_tests.ts\" --compilerOptions.typescript.configPath=test/testcafe/tsconfig.json",
    "check-types": "tsc -b src/check-all-tsconfig.json",
    "check-formatting": "prettier --check \"scss/**/*.scss\" && prettier --check \"src/**/*.{js,ts,tsx,json}\" && prettier --check \"**/*.md\"",
    "fix-formatting": "prettier --write \"scss/**/*.scss\" && prettier --write \"src/**/*.{js,ts,tsx,json}\" && prettier --write \"**/*.md\"",
    "lint": "eslint . --ext .js,.jsx,.ts,.tsx",
    "lint:fix-format": "eslint . --ext .js,.jsx,.ts,.tsx --fix || true && npm run fix-formatting",
    "dev": "npm run build && npm run start --",
    "start": "electron . --devmode --disable-http-cache --translation-watch",
    "clean": "rm -rf ./tsc-dist ./html-dist ./dist",
    "build": "npm run build:shared && npm run build:backend && npm run build:frontend",
    "build:shared": "npm run build:shared:translations && npm run build:shared:version",
    "build:shared:translations": "node ./bin/build-shared-convert-translations.mjs ./_locales",
    "build:shared:version": "node ./bin/build-shared-version-info.js",
    "build:backend": "tsc --build src/main",
    "build:frontend": "npm run build:frontend:ts && npm run build:frontend:themes && npm run build:frontend:static && npm run build:frontend:source-map-support && npm run build:frontend:scss",
    "build:frontend:ts": "node ./bin/build-frontend-ts.mjs",
    "build:frontend:themes": "sass themes/light.scss static/fallback-theme.css --style=compressed --embed-source-map && node ./bin/build-frontend-themes.js",
    "build:frontend:static": "node ./bin/copy.js ./static ./html-dist",
    "build:frontend:source-map-support": "node ./bin/build-frontend-source_map_support.js",
    "build:frontend:scss": "sass ./scss/manifest.scss ./html-dist/main.css --embed-source-map --style=compressed",
    "watch": "npm run watch:shared & npm run watch:frontend",
    "watch:shared": "npm run watch:shared:translations",
    "watch:shared:translations": "npm run build:shared:translations -- -w",
    "watch:frontend": "npm run build:frontend:source-map-support && npm run watch:frontend:ts & npm run watch:frontend:static & npm run watch:frontend:scss",
    "watch:frontend:ts": "npm run build:frontend:ts -- -w",
    "watch:frontend:static": "npm run build:frontend:static -- -w",
    "watch:frontend:scss": "npm run build:frontend:scss -- --watch",
    "build4production": "NODE_ENV=production npm run build && npm run check-types",
    "translations-pull": "tx pull -s -f && tx pull -f -a",
    "translations-update": "npm run translations-pull && npm run build:shared:translations && ./bin/find_complete_translations.sh",
    "pack": "npm run pack:generate_config && npm run pack:all",
    "pack:generate_config": "node ./build/gen-electron-builder-config.js && prettier --write ./electron-builder.json5 --loglevel silent",
    "pack:win": "electron-builder --config ./electron-builder.json5 --win nsis portable",
    "pack:mac": "electron-builder --config ./electron-builder.json5 --mac dmg mas",
    "pack:linux:dir": "electron-builder --config ./electron-builder.json5 --linux --dir",
    "pack:linux": "electron-builder --config ./electron-builder.json5 --linux AppImage deb",
    "pack:all": "electron-builder --config ./electron-builder.json5 --mac dmg --win nsis portable --linux AppImage deb"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/deltachat/deltachat-desktop.git"
  },
  "keywords": [
    "deltachat",
    "email",
    "messaging",
    "desktop"
  ],
  "author": {
    "name": "DeltaChat Developers",
    "email": "delta-systems@codespeak.net"
  },
  "license": "GPL-3.0-or-later",
  "bugs": {
    "url": "https://github.com/deltachat/deltachat-desktop/issues"
  },
  "engines": {
    "node": ">=16.0.0"
  },
  "productName": "DeltaChat",
  "homepage": "https://delta.chat",
  "browser": {
    "path": "path-browserify"
  },
  "dependencies": {
    "@blueprintjs/core": "^4.1.2",
    "@deltachat/jsonrpc-client": "^1.112.5",
    "@deltachat/message_parser_wasm": "^0.5.1",
    "@deltachat/react-qr-reader": "^4.0.0",
    "@emoji-mart/data": "1.1.2",
    "@emoji-mart/react": "1.1.1",
    "@mapbox/geojson-extent": "^1.0.0",
    "application-config": "^1.0.1",
    "classnames": "^2.3.1",
    "debounce": "^1.2.0",
    "deltachat-node": "^1.112.5",
    "emoji-js-clean": "^4.0.0",
    "emoji-mart": "5.5.2",
    "error-stack-parser": "^2.0.7",
    "filesize": "^8.0.6",
    "immutable": "^4.0.0",
    "mapbox-gl": "^1.12.0",
    "mime-types": "^2.1.31",
    "moment": "^2.29.2",
    "path-browserify": "^1.0.1",
    "rc": "^1.2.8",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-string-replace": "^1.0.0",
    "react-virtualized-auto-sizer": "^1.0.5",
    "react-window": "^1.8.6",
    "react-window-infinite-loader": "^1.0.7",
    "react-zoom-pan-pinch": "^2.1.3",
    "source-map-support": "^0.5.19",
    "stackframe": "^1.2.1",
    "url-parse": "^1.5.9",
    "use-debounce": "^3.3.0"
  },
  "devDependencies": {
    "@types/chai": "^4.3.0",
    "@types/debounce": "^1.2.0",
    "@types/emoji-mart": "^3.0.9",
    "@types/mapbox-gl": "^0.54.5",
    "@types/mime-types": "^2.1.0",
    "@types/mocha": "^9.0.0",
    "@types/node": "^14.14.20",
    "@types/node-fetch": "^2.5.7",
    "@types/rc": "^1.1.0",
    "@types/react": "^17.0.2",
    "@types/react-dom": "^17.0.2",
    "@types/react-window": "^1.8.4",
    "@types/react-window-infinite-loader": "^1.0.4",
    "@types/url-parse": "^1.4.3",
    "@typescript-eslint/eslint-plugin": "^5.3.1",
    "@typescript-eslint/parser": "^5.3.1",
    "chai": "^4.3.4",
    "chokidar": "^3.5.3",
    "electron": "^22.3.2",
    "electron-builder": "23.0.4",
    "electron-notarize": "^1.0.0",
    "esbuild": "^0.14.51",
    "eslint": "^8.2.0",
    "eslint-config-prettier": "^6.15.0",
    "eslint-plugin-react-hooks": "^4.3.0",
    "mocha": "^9.2.2",
    "node-fetch": "^2.6.7",
    "prettier": "2.2.1",
    "sass": "^1.26.5",
    "testcafe": "1.18.5",
    "testcafe-browser-provider-electron": "0.0.18",
    "testcafe-react-selectors": "^4.1.5",
    "ts-node": "^10.4.0",
    "typescript": "^4.4.4",
    "walk": "^2.3.14",
    "xml-js": "^1.6.8"
  }
}
