{
  "name": "deltachat-desktop",
  "version": "1.14.1",
  "description": "Desktop Application for delta.chat",
  "main": "index.js",
  "scripts": {
    "install": "npm run install:submodules",
    "install:submodules": "git submodule update --recursive --init",
    "test": "npm run lint && npm run check-formatting && npm run test-log-conventions && npm run test-unit",
    "test-log-conventions": "node ./bin/log-conventions",
    "test-unit": "node test/unit",
    "test-e2e-ci": "env NODE_ENV=test testcafe --skip-js-errors \"electron:./\" \"./test/testcafe/test.js\"",
    "test-e2e": "env NODE_ENV=test testcafe --skip-js-errors \"electron:./\" \"./test/testcafe/test.js\"",
    "check-formatting": "prettier --check \"scss/**/*.scss\" && prettier --check \"src/**/*.{js,ts,tsx,json}\" && prettier --check \"**/*.md\"",
    "fix-formatting": "prettier --write \"scss/**/*.scss\" && prettier --write \"src/**/*.{js,ts,tsx,json}\" && prettier --write \"**/*.md\"",
    "lint": "eslint . --ext .js,.jsx,.ts,.tsx",
    "lint:fix-format": "eslint . --ext .js,.jsx,.ts,.tsx --fix || true && npm run fix-formatting",
    "dev": "npm run build && npm run start --",
    "start": "electron . --debug --log-debug --log-to-console --disable-http-cache --translation-watch",
    "clean": "rm -rf ./tsc-dist ./html-dist ./dist",
    "build": "npm run build:shared && npm run build:backend && npm run build:frontend && npm run build:calls",
    "build:shared": "npm run build:shared:translations && npm run build:shared:version",
    "build:shared:translations": "node ./bin/build-shared-convert-translations.js ./_locales",
    "build:shared:version": "node ./bin/build-shared-version-info.js",
    "build:backend": "tsc --build src/main",
    "build:frontend": "npm run build:frontend:ts && npm run build:frontend:themes && npm run build:frontend:static && npm run build:frontend:scss",
    "build:frontend:ts": "node ./bin/build-frontend-ts.js",
    "build:frontend:themes": "sass themes/light.scss static/fallback-theme.css --style=compressed --no-source-map && node ./bin/build-frontend-themes.js",
    "build:frontend:static": "node ./bin/copy.js ./static ./html-dist",
    "build:frontend:scss": "sass ./scss/manifest.scss ./html-dist/main.css --style=compressed",
    "build:calls": "node ./bin/copy.js ./basicwebrtc/web ./html-dist/call",
    "watch": "npm run watch:shared & npm run watch:frontend",
    "watch:shared": "npm run watch:shared:translations",
    "watch:shared:translations": "npm run build:shared:translations -- -w",
    "watch:frontend": "npm run watch:frontend:ts & npm run watch:frontend:static & npm run watch:frontend:scss",
    "watch:frontend:ts": "npm run build:frontend:ts -- -w",
    "watch:frontend:static": "npm run build:frontend:static -- -w",
    "watch:frontend:scss": "npm run build:frontend:scss -- --watch",
    "build4production": "NODE_ENV=\"production\" npm run build",
    "translations-pull": "tx pull -l en && tx pull -f --parallel",
    "translations-update": "npm run translations-pull && npm run build:shared:translations",
    "hallmark": "hallmark --fix",
    "check-types": "tsc",
    "pack": "npm run pack:generate_config && npm run pack:all",
    "pack:generate_config": "node ./build/gen-electron-builder-config.js && prettier --write ./electron-builder.json5 --loglevel silent",
    "pack:win": "electron-builder --config ./electron-builder.json5 --win nsis portable",
    "pack:mac": "electron-builder --config ./electron-builder.json5 --mac dmg mas",
    "pack:linux:dir": "electron-builder --config ./electron-builder.json5 --linux --dir",
    "pack:linux": "electron-builder --config ./electron-builder.json5 --linux AppImage deb",
    "pack:all": "electron-builder --config ./electron-builder.json5 --mac dmg --win nsis portable --linux AppImage deb"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/deltachat/deltachat-desktop.git"
  },
  "keywords": [
    "deltachat",
    "email",
    "messaging",
    "desktop"
  ],
  "author": {
    "name": "DeltaChat Developers",
    "email": "delta-systems@codespeak.net"
  },
  "license": "GPL-3.0-or-later",
  "bugs": {
    "url": "https://github.com/deltachat/deltachat-desktop/issues"
  },
  "engines": {
    "node": ">=10.7.0"
  },
  "productName": "DeltaChat",
  "homepage": "https://delta.chat",
  "browser": {
    "path": "path-browserify"
  },
  "dependencies": {
    "@blueprintjs/core": "^3.22.3",
    "@blueprintjs/select": "^3.11.2",
    "@mapbox/geojson-extent": "^1.0.0",
    "@types/debounce": "^1.2.0",
    "application-config": "^1.0.1",
    "array-differ": "^3.0.0",
    "classnames": "^2.2.6",
    "debounce": "^1.2.0",
    "deltachat-node": "^1.50.0",
    "emoji-js-clean": "^4.0.0",
    "emoji-mart": "^3.0.0",
    "emoji-regex": "^9.2.0",
    "error-stack-parser": "^2.0.4",
    "filesize": "^6.1.0",
    "fs-extra": "^8.1.0",
    "immutability-helper": "^3.0.1",
    "mapbox-gl": "^1.12.0",
    "mime-types": "^2.1.25",
    "moment": "^2.27.0",
    "node-fetch": "^2.6.1",
    "path-browserify": "^1.0.1",
    "punycode": "^2.1.1",
    "rc": "^1.2.8",
    "react": "^16.12.0",
    "react-dom": "^16.12.0",
    "react-qr-reader": "^2.2.1",
    "react-qr-svg": "^2.1.0",
    "react-string-replace": "^0.4.4",
    "react-virtualized": "^9.21.2",
    "sass": "^1.26.5",
    "simple-markdown": "^0.7.1",
    "tempy": "^0.3.0",
    "url-parse": "^1.4.7",
    "use-debounce": "^3.3.0",
    "wolfy87-eventemitter": "^5.2.9"
  },
  "devDependencies": {
    "@babel/core": "^7.7.7",
    "@babel/preset-env": "^7.7.7",
    "@babel/preset-react": "^7.7.4",
    "@types/classnames": "^2.2.9",
    "@types/css": "0.0.31",
    "@types/emoji-mart": "^3.0.2",
    "@types/fs-extra": "^8.0.1",
    "@types/mapbox-gl": "^0.54.5",
    "@types/mime-types": "^2.1.0",
    "@types/node": "^13.1.6",
    "@types/node-fetch": "^2.5.7",
    "@types/prop-types": "^15.7.3",
    "@types/rc": "^1.1.0",
    "@types/react": "^16.9.17",
    "@types/react-dom": "^16.9.4",
    "@types/react-virtualized": "^9.21.10",
    "@types/sass": "^1.16.0",
    "@types/url-parse": "^1.4.3",
    "@typescript-eslint/eslint-plugin": "^4.8.2",
    "@typescript-eslint/parser": "^4.8.2",
    "depcheck": "^0.8.4",
    "electron": "6.1.9",
    "electron-builder": "^22.6.0",
    "electron-devtools-installer": "^2.2.4",
    "electron-notarize": "^0.3.0",
    "electron-react-devtools": "^0.5.3",
    "esbuild": "^0.8.28",
    "eslint": "^7.14.0",
    "eslint-config-prettier": "^6.15.0",
    "glob-watcher": "^5.0.1",
    "hallmark": "^2.0.0",
    "pngjs": "^3.3.3",
    "prettier": "2.2.1",
    "spectron": "^12.0.0",
    "tape": "^4.12.0",
    "tempy": "^0.3.0",
    "terser": "^5.5.1",
    "testcafe": "^1.8.0",
    "testcafe-browser-provider-electron": "0.0.14",
    "testcafe-react-selectors": "^4.0.0",
    "typescript": "^3.9.7",
    "walk": "^2.3.14",
    "xml-js": "^1.6.8"
  },
  "hallmark": {
    "ignore": [
      "README.md",
      "UPGRADING.md"
    ]
  },
  "standard": {
    "ignore": [
      "static/avoid-eval.js"
    ]
  }
}
