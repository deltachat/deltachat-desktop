# documentation: https://github.com/deltachat/sysadmin/tree/master/download.delta.chat
name: MacOS

on: 
  pull_request:
    paths-ignore:
      - 'docs/**'  # only trigger build if a file outside of /docs was changed

jobs:
  upload-preview-macos:
    runs-on: macos-latest
    name: Upload Preview
    steps:
    - name: Get Pullrequest ID
      id: prepare
      run: |
        export PULLREQUEST_ID=$(echo "${{ github.ref }}" | cut -d '/' -f3)
        export SHA=$(jq .pull_request.head.sha < $GITHUB_EVENT_PATH)
        export BASE_URL="https://download.delta.chat/desktop/preview/deltachat-desktop-"
        echo ::set-output name=uploadtoserver::true
        echo ::set-output name=sha::$SHA
        echo ::set-output name=base-url::$BASE_URL
        echo ::set-output name=prid::$PULLREQUEST_ID
    - uses: actions/checkout@v1
    - name: Use Node.js 10.x
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
    - name: change build name and Product Name to development id
      run: |
        node ./bin/github-actions/devbuild.js
    - name: npm install, build, test
      run: |
        npm install
        npm run build
    - name: electron builder
      run: npx electron-builder --mac mas || true
    - name: renaming
      run: |
        cd dist
        mkdir preview
        ls preview
        cd ..
    - name: compressing mas
      run: zip -r dist/preview/deltachat-desktop-mas-${{ steps.prepare.outputs.prid }}.zip dist/mas
    - name: upload folder
      if: steps.prepare.outputs.uploadtoserver
      run: |
        echo -e "${{ secrets.KEY }}" >__TEMP_INPUT_KEY_FILE
        chmod 600 __TEMP_INPUT_KEY_FILE
        scp -o StrictHostKeyChecking=no -v -i __TEMP_INPUT_KEY_FILE -P "22" -r dist/preview/ "${{ secrets.USERNAME }}"@"download.delta.chat":"/var/www/html/download/desktop/preview/"
    - name: "Post links to details"
      if: steps.prepare.outputs.uploadtoserver
      run: |
        export GITHUB_API_URL=https://api.github.com/repos/deltachat/deltachat-desktop/statuses/${{ steps.prepare.outputs.sha }}
        export MAS_URL="${{ steps.prepare.outputs.base-url }}mas-${{ steps.prepare.outputs.prid }}.zip"
        export STATUS_DATA="{\"state\": \"success\", \"description\": \"Download it here:\", \"context\": \"MacOS Preview Build\", \"target_url\": \"${MAS_URL}\"}"
        curl -f -s -X POST --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" --url "$GITHUB_API_URL" --header "content-type: application/json" --data "$STATUS_DATA"
