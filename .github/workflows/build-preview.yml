name: Preview

on: 
  pull_request:
    paths-ignore:
      - 'docs/**'  # only trigger build if a file outside of /docs was changes

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Get Pullrequest ID
      id: prepare
      run: |
        export PULLREQUEST_ID=$(echo "refs/pull/1088/merge" | cut -d '/' -f3)
        echo $PULLREQUEST_ID
        echo ::set-output name=prid::$PULLREQUEST_ID
    - name: install wine
      run: |
        sudo dpkg --add-architecture i386
        sudo apt update
        sudo apt install --yes wine-stable wine32
    - uses: actions/checkout@v1
    - name: Use Node.js 10.x
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
    - name: change build name and Product Name to development id
      run: |
        node ./bin/github-actions/devbuild.js
    - name: npm install, build, test
      run: |
        npm install
        npm run build
    - name: electron builder
      run: npx electron-builder --linux --win portable --mac mas || true
    - name: renaming
      run: |
        cd dist
        mkdir preview
        mv *.AppImage preview/deltachat-desktop-${{ steps.prepare.outputs.prid }}.AppImage
        mv *.exe preview/deltachat-desktop-${{ steps.prepare.outputs.prid }}.exe
        ls
        cd ..
    - name: compressing mas
      run: zip -r dist/preview/deltachat-desktop-mas-${{ steps.prepare.outputs.prid }}.zip dist/mas
    - name: upload folder
      if: secrets.USERNAME
      uses: appleboy/scp-action@master
      env:
        USERNAME: ${{ secrets.USERNAME }}
        KEY: ${{ secrets.KEY }}
        HOST: "download.delta.chat"
        PORT: 22
      with:
        source: "dist/preview/*"
        target: "/var/www/html/download/desktop/preview/"
        strip_components: 1
    - name: "Post Links"
      if: secrets.USERNAME
      uses: rytswd/respost@v0.1.0
      with:
        title: "Download Preview Builds"
        body: "Thanks for your contribution! You can download the preview builds here: \
               Linux (portable): https://download.delta.chat/desktop/preview/deltachat-desktop-${{ steps.prepare.outputs.prid }}.AppImage \
               MacOS (portable): https://download.delta.chat/desktop/preview/deltachat-desktop-mas-${{ steps.prepare.outputs.prid }}.zip \
               Windows (portable): https://download.delta.chat/desktop/preview/deltachat-desktop-${{ steps.prepare.outputs.prid }}.exe"
#               Linux: https://download.delta.chat/desktop/preview/deltachat-desktop-${{ steps.prepare.outputs.prid }}.deb \
#               Windows: https://download.delta.chat/desktop/preview/deltachat-desktop-${{ steps.prepare.outputs.prid }}.exe \
    - name: "zip result"
      if: ${{ !secrets.USERNAME }}
      run: zip -r dist/preview.zip dist/preview/
    - name: Upload result to artifacts\
      if: ${{ !secrets.USERNAME }}
      uses: actions/upload-artifact@master
      with:
        name: Files
        path: dist/preview.zip
